version: '{build}'

nuget:
  disable_publish_on_pr: true

configuration: Release

environment:
   # Don't report back to the mothership
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

install:
- ps: scripts\Get-Deps.ps1

before_build:
- dotnet --info
- appveyor-retry dotnet restore -v Minimal

build_script:
- ps: |
    if ($env:APPVEYOR_REPO_TAG -eq "true") {
      # always stamp builds triggered from tags with a public version
      dotnet build --no-restore -c $env:CONFIGURATION /p:PublicRelease=true
    } else {
      # let the version.json decide if it's a public build or not based on the branch name
      dotnet build --no-restore -c $env:CONFIGURATION
    }

test:
  assemblies:
    only:
      - '**\*.Tests.dll'

after_test:
- dotnet pack --no-build --no-restore -c %CONFIGURATION%

artifacts:
- path: build\**\*.nupkg
  name: NuGet

deploy:
  provider: NuGet
  server:                  # remove to push to NuGet.org
  api_key:
    secure: KNFSKb7s+3+79G+FOMmubE+llHdsyV+3ApSqqgrbia5DM4RCzKDEIXaQGPqip9bf
  skip_symbols: true
  symbol_server:           # remove to push symbols to SymbolSource.org
  artifact: /.*\.nupkg/
  on:
    APPVEYOR_REPO_TAG: true

after_deploy:
  - ps: |
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        npm config set //registry.spoiledcat.com/:_authToken $env:NPM_TOKEN
        npm config set always-auth true
        scripts\PublishToNpm.ps1
      }
